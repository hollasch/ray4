
    This is release 1.00 of my 4D raytracer, which I wrote for my master's
thesis entitled "Four-Space Visualization of 4D Objects", in May 1991.  The
thesis is available in PostScript format via anonymous FTP from the
following sites:

	swedishchef.lerc.nasa.gov
	ftp.uu.net
	nic.funet.fi  [128.214.6.100]
	gondwana.ecr.mu.oz.au  [128.250.1.63]
	wuarchive.wustl.edu  [128.252.135.4]

    This release should include the following files:

    README		// This File
    copyright		// Ray4 Release Copyright
    ray4.doc		// Ray4 Documentation

    makefile		// Program Make File
    ray4.h		// Main Header File
    r4_globals.h	// Ray4 Global Variables
    r4_image.h		// Ray4 Image Cube File Format Structures
    vector.h		// Vector Operation Macros
    v4cross.c		// Vector Cross-Product Routine
    v4normalize.c	// Vector Normalization Routine
    r4_main.c		// Main Ray4 Functions
    r4_io.c		// Ray4 Input/Output Functions (for portability)
    r4_parse.c		// Ray4 Input File Parsing Routines
    r4_trace.c		// Ray4 Raytracing Routines
    r4_hit.c		// Ray4 Ray-Object Intersection Routines
    r4tosgi.c		// Ray4 Output File to GL-Device Display Program

    scube.r4		// Input Files
    sphere.r4
    tcube.r4
    dots.r4
    format.r4
    blank.r4
    wdots.r4


    If you've received this package from me via e-mail, then I've already
added you to my mailing list.  If you got this package from some other means,
then you can let me know via e-mail and I'll try to keep you posted on
developments, updates, fixes and such.  I always appreciate any comments or
suggestions you might have.

    You will probably need to tweak the makefile to get it to run on
your platform.  I've tried to make this as straightforward as possible,
but let me know if you have problems.

    ray4 is a true 4D raytracing program that takes as input an ASCII scene
description file and generates a 3D voxel image.  The resulting image file
may be viewed via several display programs.  The raytracer currently handles
hyperspheres, tetrahedra, parallelepipeds, and hyperplanes.  It supports
point & infinite lights, reflection, refraction, and the full lighting model
(ambient, diffuse, specular).

    ray4 runs on any platform that supports C with floating point.  However,
the display program limits the number of useful platforms.  Here's the
status on the display programs:

    r4tosgi:  Available; displays the 3D image on an SGI box.
    r4toiff:  To be released (targets Amigas).
    r4tomtv:  Available; converts 3D image to MTV format, and then possibly
	      to Sun raster format.  Written by Mark Craig.

    For a quick preview, try the following after you've made everything:

	ray4 -a1:1:1 -r256:256:1 -idots.r4 -odots.icube
	r4tosgi dots.icube

    Also available for release is my 4D wireframe program.  Let me know
if you are interested and I'll send you a copy.  wire4 runs on most GL
platforms.

    Finally, I'd like to acknowledge and thank the folks who volunteered
to beta-test this software for me:

        Greg Aharonian
        Brian Carney
	Mark Craig
        Mark Ferneau
        Marty Ryan

                                             Steve Hollasch
                                             hollasch@kpc.com
